// Code generated by go generate; DO NOT EDIT.
package assert

import "fmt"

func String(v interface{}) string {
	i, ok := v.(string)
	Assert(ok, "type assert: string", map[string]interface{}{
		"type":  fmt.Sprintf("%T", v),
		"value": fmt.Sprintf("%v", v),
	}, CallerOption(1, false))
	return i
}

func Int(v interface{}) int {
	i, ok := v.(int)
	Assert(ok, "type assert: int", map[string]interface{}{
		"type":  fmt.Sprintf("%T", v),
		"value": fmt.Sprintf("%v", v),
	}, CallerOption(1, false))
	return i
}

func Uint(v interface{}) uint {
	i, ok := v.(uint)
	Assert(ok, "type assert: uint", map[string]interface{}{
		"type":  fmt.Sprintf("%T", v),
		"value": fmt.Sprintf("%v", v),
	}, CallerOption(1, false))
	return i
}
